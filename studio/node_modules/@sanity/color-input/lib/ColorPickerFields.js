"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ColorPickerFields = void 0;

var _react = _interopRequireDefault(require("react"));

var _color = _interopRequireDefault(require("react-color/lib/helpers/color"));

var _common = require("react-color/lib/components/common");

var _ColorPickerFields = _interopRequireDefault(require("./ColorPickerFields.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable no-param-reassign, complexity, react/prop-types */
var inputStyles = {
  input: {
    width: '80%',
    padding: '4px 10% 3px',
    border: 'none',
    boxShadow: 'inset 0 0 0 1px #ccc',
    fontSize: '11px'
  },
  label: {
    display: 'block',
    textAlign: 'center',
    fontSize: '11px',
    color: '#222',
    paddingTop: '3px',
    paddingBottom: '4px',
    textTransform: 'capitalize'
  }
};

var ColorPickerFields = (_ref) => {
  var onChange = _ref.onChange,
      rgb = _ref.rgb,
      hsl = _ref.hsl,
      hex = _ref.hex,
      disableAlpha = _ref.disableAlpha;

  var handleChange = (data, e) => {
    if (data.hex) {
      _color.default.isValidHex(data.hex) && onChange({
        hex: data.hex,
        source: 'hex'
      }, e);
    } else if (data.r || data.g || data.b) {
      onChange({
        r: data.r || rgb.r,
        g: data.g || rgb.g,
        b: data.b || rgb.b,
        a: rgb.a,
        source: 'rgb'
      }, e);
    } else if (data.a) {
      if (data.a < 0) {
        data.a = 0;
      } else if (data.a > 100) {
        data.a = 100;
      }

      data.a /= 100;
      onChange({
        h: hsl.h,
        s: hsl.s,
        l: hsl.l,
        a: data.a,
        source: 'rgb'
      }, e);
    }
  };

  return /*#__PURE__*/_react.default.createElement("div", {
    className: _ColorPickerFields.default.fields
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _ColorPickerFields.default.double
  }, /*#__PURE__*/_react.default.createElement(_common.EditableInput, {
    style: inputStyles,
    label: "hex",
    value: hex.replace('#', ''),
    onChange: handleChange
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: _ColorPickerFields.default.single
  }, /*#__PURE__*/_react.default.createElement(_common.EditableInput, {
    style: inputStyles,
    label: "r",
    value: rgb.r,
    onChange: handleChange,
    dragLabel: "true",
    dragMax: "255"
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: _ColorPickerFields.default.single
  }, /*#__PURE__*/_react.default.createElement(_common.EditableInput, {
    style: inputStyles,
    label: "g",
    value: rgb.g,
    onChange: handleChange,
    dragLabel: "true",
    dragMax: "255"
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: _ColorPickerFields.default.single
  }, /*#__PURE__*/_react.default.createElement(_common.EditableInput, {
    style: inputStyles,
    label: "b",
    value: rgb.b,
    onChange: handleChange,
    dragLabel: "true",
    dragMax: "255"
  })), !disableAlpha && /*#__PURE__*/_react.default.createElement("div", {
    className: _ColorPickerFields.default.alpha
  }, /*#__PURE__*/_react.default.createElement(_common.EditableInput, {
    style: inputStyles,
    label: "a",
    value: Math.round(rgb.a * 100),
    onChange: handleChange,
    dragLabel: "true",
    dragMax: "100"
  })));
};

exports.ColorPickerFields = ColorPickerFields;
var _default = ColorPickerFields;
exports.default = _default;