"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var fullscreen_1 = __importDefault(require("part:@sanity/components/dialogs/fullscreen"));
var spinner_1 = __importDefault(require("part:@sanity/components/loading/spinner"));
var default_1 = __importDefault(require("part:@sanity/components/buttons/default"));
var AIFaceAssetSource_css_1 = __importDefault(require("./AIFaceAssetSource.css"));
var AIFaceAssetSource = /** @class */ (function (_super) {
    __extends(AIFaceAssetSource, _super);
    function AIFaceAssetSource(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            isLoading: true,
            didLoad: false,
            cacheBuster: new Date().getTime()
        };
        _this.handleClose = function () {
            _this.props.onClose();
        };
        _this.canvasRef = react_1.default.createRef();
        _this.imgRef = react_1.default.createRef();
        return _this;
    }
    AIFaceAssetSource.prototype.handleSaveImage = function () {
        var canvas = this.canvasRef.current;
        if (!canvas) {
            console.log('Error: No canvas!');
            return;
        }
        var value = canvas.toDataURL();
        var asset = {
            kind: 'base64',
            value: value,
            assetDocumentProps: {
                source: {
                    name: 'thispersondoesnotexist.com',
                    id: String(new Date().getTime())
                },
                creditLine: 'https://thispersondoesnotexist.com'
            }
        };
        this.props.onSelect([asset]);
    };
    AIFaceAssetSource.prototype.handleImageLoaded = function () {
        var canvas = this.canvasRef.current;
        var img = this.imgRef.current;
        if (canvas && img) {
            var context = canvas.getContext('2d');
            if (context) {
                context.drawImage(img, 0, 0);
                this.setState({ isLoading: false, didLoad: true });
            }
        }
    };
    AIFaceAssetSource.prototype.render = function () {
        var _this = this;
        var _a = this.state, isLoading = _a.isLoading, didLoad = _a.didLoad, cacheBuster = _a.cacheBuster;
        // The source is missing cors headers, so we need to proxy these requests
        var url = "https://cors-anywhere.herokuapp.com/https://thispersondoesnotexist.com/image?key=" + cacheBuster;
        return (react_1.default.createElement(fullscreen_1.default, { title: "Select face from thispersondoesnotexist.com", onClose: this.handleClose, isOpen: true },
            react_1.default.createElement("div", { className: AIFaceAssetSource_css_1.default.root },
                react_1.default.createElement("div", { className: AIFaceAssetSource_css_1.default.buttons },
                    react_1.default.createElement(default_1.default, { disabled: isLoading, onClick: function () {
                            return _this.setState({ isLoading: true, cacheBuster: _this.state.cacheBuster + 1 });
                        } }, "Generate new"),
                    react_1.default.createElement(default_1.default, { disabled: isLoading || !didLoad, onClick: function () {
                            _this.handleSaveImage();
                        } }, "Pick this one")),
                react_1.default.createElement("div", { className: AIFaceAssetSource_css_1.default.wrapper },
                    isLoading && react_1.default.createElement(spinner_1.default, { inline: true }),
                    react_1.default.createElement("canvas", { className: AIFaceAssetSource_css_1.default.canvas, ref: this.canvasRef, width: 1024, height: 1024 })),
                react_1.default.createElement("img", { onError: function () { return _this.setState({ isLoading: false }); }, onLoad: function () { return _this.handleImageLoaded(); }, ref: this.imgRef, src: url, crossOrigin: "anonymous", className: AIFaceAssetSource_css_1.default.image }))));
    };
    AIFaceAssetSource.defaultProps = {};
    return AIFaceAssetSource;
}(react_1.default.Component));
exports.default = AIFaceAssetSource;
//# sourceMappingURL=AIFaceAssetSource.js.map